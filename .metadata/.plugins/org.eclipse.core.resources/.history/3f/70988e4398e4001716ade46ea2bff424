package fr.m2i.etudesjava;

public class Employe extends Personne 
{
	private float salaire;
	private String societe;
	/*
	private int service;
	public static final int Direction = 0;
	public static final int Comptabilite = 1;
	public static final int ServiceCommercial = 2;
	public static final int SAV = 3;
	*/
	
	/*
	 * On a constaté lors de l'utilisation de la classe personne 
	 * que la définition de la civilité et de la langue comme des 
	 * types int nous a obligé à faire de nombreuses vérifications
	 *  et validations dans les constructeurs et setters (car le type
	 *  int n'interdit pas les valeurs abérantes comme par exemple
	 *  100 pour la langue et 50 pour la civilité
	 *  
	 *  Cette fois, on va utiliser des valeurs autorisés par une énumération
	 *  
	 *  Tout comme les classes et les interfaces, un énumération définit 
	 *  un type
	 */
	
	public static enum ServicesV1{DIRECTION, COMMERCIAL, RELATION_CLIENTS, SAV};
	
	/*
	 * Champs d'instance qui précise le service ou travaille l'mployé 
	 * Comme je ne veux autoriser pour ce champs que des valeurs définies 
	 * par l'énumération ServicesV1, j'utilise ce type ServicesV1 pour mon champ
	 */
	
	private ServicesV1 service;

	/*
	 * revenir ici pour définir d'autres versions possibles pour cette énumération
	 */
	
	public Employe(String nom, String prenom, int civilite, float salaire, String societe, ServicesV1 service) {
		super(nom, prenom, civilite);
	}

}
